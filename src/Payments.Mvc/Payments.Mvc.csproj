<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <UserSecretsId>6271f4e7-1309-408a-9fea-6d1c4049078b</UserSecretsId>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>1591</NoWarn>
    <!-- <MvcRazorExcludeRefAssembliesFromPublish>false</MvcRazorExcludeRefAssembliesFromPublish> -->
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <NoWarn>1701;1702;1591</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AspNetCore.Security.CAS" Version="2.0.5"/>
    <PackageReference Include="Humanizer.Core" Version="2.14.1"/>
    <PackageReference Include="ietws" Version="0.2.8"/>
    <PackageReference Include="Joonasw.AspNetCore.SecurityHeaders" Version="4.0.1"/>
    <PackageReference Include="jsreport.AspNetCore" Version="2.1.0"/>
    <PackageReference Include="jsreport.Client" Version="3.1.1"/>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="6.0.2"/>
    <PackageReference Include="Serilog" Version="2.10.0"/>
    <PackageReference Include="Serilog.AspNetCore" Version="5.0.0"/>
    <PackageReference Include="Serilog.Enrichers.ClientInfo" Version="1.1.4"/>
    <PackageReference Include="Serilog.Exceptions" Version="8.1.0"/>
    <PackageReference Include="Serilog.Sinks.ElasticSearch" Version="8.4.1"/>
    <PackageReference Include="Serilog.Sinks.MSSqlServer" Version="5.7.0"/>
    <PackageReference Include="Serilog.Sinks.Stackify" Version="2.0.2"/>
    <PackageReference Include="SpaCliMiddleware" Version="5.0.0"/>
    <PackageReference Include="StackifyLib.AspNetCore" Version="2.1.5"/>
    <PackageReference Include="StackifyMiddleware" Version="3.0.5.2"/>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.3.0"/>
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.3.0"/>
    <PackageReference Include="Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers" Version="0.3.310801">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.3"/>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.3"/>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Payments.Core\Payments.Core.csproj"/>
    <ProjectReference Include="..\Payments.Emails\Payments.Emails.csproj"/>
  </ItemGroup>
  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.3"/>
  </ItemGroup>
  <ItemGroup>
    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Content Remove="ClientApp\**"/>
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Resources\WebHookDescriptions.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>WebHookDescriptions.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Content Update="Views\Shared\_TopNavPartial_tablet_laptop.cshtml">
      <Pack>$(IncludeRazorContentInPack)</Pack>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Resources\WebHookDescriptions.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>WebHookDescriptions.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <Target Name="CopyDocumentationFile" AfterTargets="ComputeFilesToPublish">
    <ItemGroup>
      <ResolvedFileToPublish Include="@(FinalDocFile)" RelativePath="@(FinalDocFile->'%(Filename)%(Extension)')"/>
    </ItemGroup>
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install"/>
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod"/>
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**"/>
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
  
  <PropertyGroup>
    <!-- File with mtime of last successful npm install -->
    <NpmInstallStampFile>node_modules/.install-stamp</NpmInstallStampFile>
  </PropertyGroup>
  <Target Name="NpmInstallDebug"
    BeforeTargets="BeforeBuild"
    Condition=" '$(Configuration)' == 'Debug' "
    Inputs="package.json"
    Outputs="$(NpmInstallStampFile)">
    <Exec Command="npm install" />
    <Touch Files="$(NpmInstallStampFile)" AlwaysCreate="true" />
  </Target>
  <Target Name="NpmInstallRelease"
    BeforeTargets="BeforeBuild"
    Condition=" '$(Configuration)' == 'Release' "
    Inputs="package.json"
    Outputs="$(NpmInstallStampFile)">
    <Exec Command="npm ci" />
    <Touch Files="$(NpmInstallStampFile)" AlwaysCreate="true" />
  </Target>
</Project>
