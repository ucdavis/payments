

.container-fluid {
  padding: 0;
}

table.dataTable {
  border: 1px solid $borders;
  border-collapse: collapse !important;
  th, td {

  }
  thead {
    th {
      font-family: $sans-bold;
      color: $primary-font;
      font-weight: inherit;
      text-transform: uppercase;
      border:none;
      padding-top:8px;
      padding-bottom:8px;
      border-bottom:1px solid $borders;
      border-right:1px solid $borders;
      &:last-child {
        border-right:none;
      }

      
    }
    
    .sorting:after,
    .sorting:before,
    .sorting_asc:after,
    .sorting_asc:before,
    .sorting_asc_disabled:after,
    .sorting_asc_disabled:before,
    .sorting_desc:after,
    .sorting_desc:before,
    .sorting_desc_disabled:after,
    .sorting_desc_disabled:before {
      bottom: 1px;
      padding-top: 8px;
      padding-bottom: 8px;
    }
  }
  tbody {
    // border-left:1px solid $borders;
    // border-right:1px solid $borders;
  }
  td {
    border:none;
    border-bottom:1px solid $borders;
    border-right:1px solid $borders;
    &:last-child {
      border-right:none;
    }
  }
}



.page-item.active .page-link {
  background-color: $primary-color;
  border-color: $primary-color;
}

.input-group-sm > .input-group-append > select.btn:not([size]):not([multiple]),
.input-group-sm > .input-group-append > select.input-group-text:not([size]):not([multiple]),
.input-group-sm > .input-group-prepend > select.btn:not([size]):not([multiple]),
.input-group-sm > .input-group-prepend > select.input-group-text:not([size]):not([multiple]),
.input-group-sm > select.form-control:not([size]):not([multiple]),
select.form-control-sm:not([size]):not([multiple]) {
  // height: calc(1.8125rem + 10px);
}
@-moz-document url-prefix() {
  .input-group-sm > .input-group-append > select.btn:not([size]):not([multiple]),
  .input-group-sm > .input-group-append > select.input-group-text:not([size]):not([multiple]),
  .input-group-sm > .input-group-prepend > select.btn:not([size]):not([multiple]),
  .input-group-sm > .input-group-prepend > select.input-group-text:not([size]):not([multiple]),
  .input-group-sm > select.form-control:not([size]):not([multiple]),
  select.form-control-sm:not([size]):not([multiple]) {
    // height: calc(2.5rem + 10px);
  }
}
// hide input type number arrows

input[type=number] {
  -moz-appearance: textfield;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.input-daterange .add-on {
    font-size: 1rem;
    line-height: 1.5rem;
    height: calc(2.25rem + 2px);
    padding: 0.375rem 1.75rem;
    color: $secondary-font;
}

// fix spacing on checkboxes
.form-check {
  padding-left: 2rem;

  .form-check-input {
    margin-top: 0.6rem;
    margin-left: -2rem;
  }
}

.progress-bar {
  background-color: $primary-color;
}

.alert button.close {
    float: none;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 1rem;
    padding: 0.25rem;
}

.pretty {

  input:checked ~ .state.p-primary label::after,
  &.p-toggle .state.p-primary label::after,
  &.p-default:not(.p-fill) input:checked ~ .state.p-primary-o label::after {
    background-color: $primary-color !important;
  }

  input:checked ~ .state.p-primary-o label::before,
  &.p-toggle .state.p-primary-o label::before {
    border-color: $primary-color !important;
  }

  &.no-label {
    margin-right: -4px;
    margin-left: 2px;
  }

  &.p-jelly {
    input:checked + .state {
      .icon,
      .svg,
      img,
      label:before,
      label:after {
        animation: jelly 0.7s cubic-bezier(0.250, 0.460, 0.450, 0.940);
        opacity: 1;
      }
  
      label:before {
        border-color: transparent;
      }
    }
  }
}
