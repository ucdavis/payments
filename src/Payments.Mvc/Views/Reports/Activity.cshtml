@using Payments.Core.Extensions

@model Payments.Mvc.Models.InvoiceViewModels.InvoiceListViewModel
@{
    ViewBag.Title = "Activity Report";
}

<div class="card">
    <div class="card-header card-header-primary d-flex justify-content-between align-items-start">
        <h1>@ViewBag.Title</h1>

   
    </div>
        <div class="card-header card-header-primary d-flex justify-content-between align-items-start">

         @if (Model.Year.HasValue)
        {
            <div>Shows all invoices created in @Model.Year. Export to excel to view additional columns.</div>
        }
        else
        {
            <div>Shows all invoices created in the last 12 months (since @DateTime.Now.AddMonths(-12).ToString("d")). Export to excel to view additional columns.</div>
        }
   
    </div>
    <div class="card-content">
        <form asp-action="Activity" method="post">
            <div class="row align-items-end">
                <div class="col-sm-4">
                    <div class="form-group">
                        <div class="form-group col-12">
                            <label>Filter for Year</label>
                            <div class="input-group">
                                <input class="form-control" type="text" placeholder="YYYY" asp-for="Year" asp-format="{0:yyyy}" />
                            </div>
                        </div>
                        <div class="form-group col-12">
                            <div class="form-group">
                                <button type="submit" class="btn btn-link"><i class="fas fa-sync-alt fa-sm"></i> Refresh Report</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="card-body table-responsive">
        <table id="Invoices" class="table">
            <thead>
                <tr>
                    <th>Invoice Number</th>
                    <th>Status</th>
                    <th>Customer Email</th>
                    <th>Customer Name</th>
                    <th>Customer Company</th>
                    <th>Amount</th>
                    <th>Account Name</th>
                    <th>KFS Account</th>
                    <th>AE Account</th>
                    <th>Sent At</th>
                    <th>Created</th>
                    <th>Due Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var invoice in Model.Invoices)
                {
                    <tr>
                        <td>@invoice.GetFormattedId()</td>
                        <td>@invoice.Status</td>
                        <td>@invoice.CustomerEmail</td>
                        <td>@invoice.CustomerName</td>
                        <td>@invoice.CustomerCompany</td>
                        <td>@invoice.CalculatedTotal</td>
                        <td>@invoice.Account.Name</td>
                        <td>@invoice.Account.GetAccountString()</td>
                        <td>@invoice.Account.FinancialSegmentString</td>
                        <td>@(invoice.SentAt.HasValue ? invoice.SentAt.Value.ToPacificTime().ToString("d") : "")</td>
                        <td>@invoice.CreatedAt.ToPacificTime().ToString("d")</td>
                        <td>@(invoice.DueDate.HasValue ? invoice.DueDate.Value.ToPacificTime().ToString("d") : "")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts
{
    <script type="text/javascript" asp-add-nonce="true">
        $(function() {
            // setup table
            $("#Invoices").DataTable({
                dom: 'Bfrtip',
                buttons: [
                    'copy', 'excel'
                ],
                order: [[ 7, 'desc' ]],
                columnDefs: [
                    { targets: [3, 4, 7, 8], visible: false }
                ],
            });
            // setup datepickers
            $('#Year').datepicker({
                keepEmptyValues: true,
                format: "yyyy",
                startView: "years",
                minViewMode: "years",
                endDate: new Date(),
            });
        });
    </script>
}
