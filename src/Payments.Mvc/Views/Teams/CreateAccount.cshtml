@model Payments.Core.Domain.FinancialAccount

@{
    ViewData["Title"] = "Create Account";
}

<h2>Create Account for Team @Model.Team.Name</h2>

<h4>FinancialAccount</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateAccount">
            @Html.Partial("_AccountForm")
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        $(function () {
            $("#Chart").prop('disabled', false);
            $("#Account").prop('disabled', false);
            $("#SubAccount").prop('disabled', false);
        });
      
    </script>

    @*<script type="text/javascript">
        $("#Account").on("blur",
            function() {
                const account = $("#Account").val();
                const chart = $("#Chart").val();
                const subAcccount = $("#SubAccount").val();
                //fetch(`/financial/info?chart=4&account=CRU9033`, { credentials: "same-origin" })
                fetch(`/financial/info?chart=` + chart + `&account=`+ account +`&subAccount=` + subAcccount, { credentials: "same-origin" })
                    .then((response) => {
                        if (!response.ok) {
                            throw Error("The account you entered could not be found");
                        }
                        return response;
                    })
                    .then((response) => response.json())
                    .then((accountName) => {
                        alert(accountName);
                    });

            });
    </script>*@
}
