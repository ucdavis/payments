@using System.Security.Claims
@using Payments.Mvc.Models.Roles
@model Team

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Slug)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Slug)
        </dd>
    </dl>


    <div class="row justify-content-between">
        
        <div class="col-sm-12 col-md-5">
            <a class="" asp-controller="FinancialAccounts" asp-action="Index" asp-route-team="@Model.Slug">
                <div class="d-flex align-items-center card-dashboard-button card-style btn-card">
                    <img src="/media/statistics.svg" alt="statistics icon">
                    <div>
                        <h2 class="secondary-font">Account</h2>
                        <p class="tertiary-font">Edit Financial Accounts for Team</p>
                    </div>
                </div>
            </a>
        </div>
        
        
        <div class="col-sm-12 col-md-5">
            <a class="" asp-controller="Teams" asp-action="Roles" asp-route-team="@Model.Slug">
                <div class="d-flex align-items-center card-dashboard-button card-style btn-card">
                    <img src="/media/support.svg" alt="support icon">
                    <div>
                        <h2 class="secondary-font">Users</h2>
                        <p class="tertiary-font">Edit Users and Roles for Team</p>
                    </div>
                </div>
            </a>
        </div>
        
    </div>


</div>
<div>
    @if (ViewBag.UserCanEdit != null && (bool)ViewBag.UserCanEdit)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit Team</a> <span> | </span>
        <a asp-action="Index">Back to List of Teams</a>
    }

</div>

@section AdditionalStyles
    {
    @{ await Html.RenderPartialAsync("_DataTableStylePartial"); }
}

@section scripts
    {
    @{ await Html.RenderPartialAsync("_DataTableScriptsPartial"); }

    <script type="text/javascript">
        $(function() {
            $(".table").DataTable({
                columnDefs: [
                    {
                        targets: [-1], orderable: false
                    },
                    {
                        targets: [-1], searchable: false
                    }
                ]
            });
        });
    </script>
}
