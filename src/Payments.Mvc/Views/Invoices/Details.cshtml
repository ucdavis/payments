@using Microsoft.AspNetCore.Http
@using Payments.Core.Models.History
@model Invoice
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewBag.Title = $"Invoice #{Model.Id}";
    Layout = "_Layout";

    var scheme = HttpContextAccessor.HttpContext.Request.Scheme;

    var timeline = Model.History.OrderByDescending(h => h.ActionDateTime);
}

<div class="card-style">
    <div class="card-header-yellow card-bot-border">
        <div class="card-head d-flex justify-content-between">
            <div class="d-flex align-items-center">
                <h2 class="m0">@ViewBag.Title for @Model.Total.ToString("C")</h2>
                <span class="ml-3 badge @Invoice.StatusCodes.GetBadgeClass(Model.Status)" data-level="@Model.Status">@Model.Status</span>
            </div>

            @if (Model.Status == Invoice.StatusCodes.Draft)
            {
                <button class="btn-plain" data-toggle="modal" data-target="#deleteDraftModal">
                    <i class="far fa-trash-alt text-danger"></i>
                    Delete draft
                </button>
            }
        </div>
    </div>
    <div class="card-content card-bot-border">
        @if (Model.Status == Invoice.StatusCodes.Draft || Model.Status == Invoice.StatusCodes.Sent)
        {
            <a asp-controller="Payments" asp-action="Preview" asp-route-id="@Model.Id" class="btn btn-primary">
                <i class="fas fa-search mr-3"></i>
                Preview
            </a>

            <a href="#" id="sendInvoiceButton" class="btn btn-primary" data-toggle="modal" data-target="#sendInvoiceModal">
                <i class="far fa-envelope mr-3"></i>
                @(!Model.Sent ? "Send" : "Resend")
            </a>
        }

        @if (Model.Status == Invoice.StatusCodes.Sent)
        {
            <button class="btn btn-primary" data-toggle="modal" data-target="#markPaidModal">
                <i class="far fa-check-square"></i>
                Mark as paid
            </button>
        }
    </div>
    <div class="card-content history-timeline">
        @foreach (var action in timeline)
        {
            var actionType = HistoryActionTypes.GetHistoryActionType(action.Type);

            <div class="d-flex w-100 history-item">
                <div class="ml-2 mt-1 mr-4">
                    <i class="history-icon fa-fw @actionType.IconClass"></i>
                </div>
                <div>
                    <span>@action.GetMessage()</span><br />
                    <span class="text-muted">@action.ActionDateTime.ToString("MMM dd, h:mm tt")</span>
                </div>
            </div>
        }
    </div>
</div>

<div class="card-style">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h3>Summary</h3>

        <div>
            @if (!string.IsNullOrWhiteSpace(Model.LinkId))
            {
                <a asp-controller="Pdf" asp-action="Invoice" asp-route-id="@Model.LinkId" class="btn btn-primary">
                    <i class="fas fa-download mr-3"></i>
                    Download PDF
                </a>
            }

            @if (Model.Status == Invoice.StatusCodes.Draft || Model.Status == Invoice.StatusCodes.Sent)
            {
                if (!Model.Sent)
                {
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                        <i class="far fa-edit mr-3"></i>
                        Edit
                    </a>
                }
                else
                {
                    <button class="btn btn-primary" data-toggle="modal" data-target="#editLockedInvoiceModal">
                        <i class="far fa-edit mr-3"></i>
                        Edit
                    </button>
                }
            }
        </div>
    </div>
    <div class="card-content invoice-customer">
        <h2>Customer Info</h2>
        <dl class="row">
            @if (!string.IsNullOrWhiteSpace(Model.CustomerName))
            {
                <dt class="col-3">@Html.DisplayNameFor(x => x.CustomerName)</dt>
                <dd class="col-9">@(Model.CustomerName)</dd>
            }

            @if (!string.IsNullOrWhiteSpace(Model.CustomerEmail))
            {
                <dt class="col-3">@Html.DisplayNameFor(x => x.CustomerEmail)</dt>
                <dd class="col-9">@(Model.CustomerEmail)</dd>
            }

            @if (!string.IsNullOrWhiteSpace(Model.CustomerAddress))
            {
                <dt class="col-3">@Html.DisplayNameFor(x => x.CustomerAddress)</dt>
                <dd class="col-9">@(Model.CustomerAddress)</dd>
            }
        </dl>
    </div>
    <div class="card-content invoice-items">
        <h2>Invoice Items</h2>
        <table class="invoice-details-table">
            <thead>
                <tr>
                    <th>Description</th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th>Amount</th>
                </tr>
            </thead> 
            <tbody>
            @for (var i = 0; i < Model.Items.Count; i++)
            {
                <tr>
                    <td>@Html.DisplayFor(x => x.Items[i].Description)</td>
                    <td>@Html.DisplayFor(x => x.Items[i].Quantity)</td>
                    <td>@Html.DisplayFor(x => x.Items[i].Amount)</td>
                    <td>@Html.DisplayFor(x => x.Items[i].Total)</td>
                </tr>
            }
            </tbody>
            <tbody>
                <tr>
                    <td></td>
                    <td>Subtotal</td>
                    <td></td>
                    <td>@Html.DisplayFor(x => x.Subtotal)</td>
                </tr>
                @if (Model.Discount > 0 || Model.Coupon != null)
                {

                    // paid invoices don't expire
                    var isExpired = (!Model.Paid && Model.Coupon?.ExpiresAt != null && Model.Coupon.ExpiresAt.Value < DateTime.UtcNow);

                    <tr>
                        <td></td>
                        <td>
                            @if (Model.Coupon != null)
                            {
                                <span>Coupon</span>
                            }
                            else
                            {
                                <span>Discount</span>
                            }
                        </td>
                        <td>
                            @if (Model.Coupon != null)
                            {
                                <span>@Model.Coupon.Name</span>
                                <br/>
                                if (Model.Coupon.DiscountAmount.HasValue)
                                {
                                    <small>@Model.Coupon.DiscountAmount.Value.ToString("C") off</small>
                                }
                                if (Model.Coupon.DiscountPercent.HasValue)
                                {
                                    <small>@Model.Coupon.DiscountPercent.Value.ToString("P") off</small>
                                }
                            }
                        </td>
                        <td>
                            @if (isExpired)
                            {
                                <span>Expired</span>
                            }
                            else
                            {
                                <span>-$@Model.Discount.ToString("F2")</span>
                            }
                        </td>
                    </tr>
                }
                    <tr>
                        <td />
                        <td>Tax</td>
                        <td>@Html.DisplayFor(x => x.TaxPercent)</td>
                        <td>@Html.DisplayFor(x => x.TaxAmount)</td>
                    </tr>
                </tbody>
            <tfoot>
                <tr>
                    <td />
                    <td>Total</td>
                    <td />
                    <td>@Html.DisplayFor(x => x.Total)</td>
                </tr>
            </tfoot>
        </table>
    </div>
    @if (!string.IsNullOrWhiteSpace(Model.Memo))
    {
        <div class="card-content invoice-memo">
            <h2>Memo</h2>
            <div class="form-group">
                @Html.DisplayFor(x => x.Memo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
    }
</div>

@if (Model.Attachments.Any())
{
    <div class="card-style">
        <div class="card-header">
            <h3>Attachments</h3>
        </div>
        <div class="card-content invoice-attachments">
            @foreach (var a in Model.Attachments)
            {
                var iconClass = a.GetFileIcon();

                <div class="d-flex justify-content-between align-items-center my-3">
                    <div class="col-9 d-flex align-items-center">
                        <i class="fa-2x mr-4 @iconClass"></i>
                        <div class="input-group">
                            <input class="form-control" value="@a.FileName" readonly>
                        </div>
                    </div>

                    <span class="col-2 d-flex justify-content-center">@a.GetSizeText()</span>

                    <div class="col-1 d-flex justify-content-end align-items-center">
                        <a class="btn-plain btn-hover mx-2" target='_blank' asp-controller="Files" asp-action="GetFile" asp-route-id="@a.Id">
                            <i class="fas fa-download"></i>
                        </a>

                        <button class="btn-plain btn-hover text-danger ml-2">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
}

<div class="card-style">
    <div class="card-header">
        <h3>Details</h3>
    </div>
    <div class="card-content invoice-details">
        <dl class="row">
            <dt class="col-2 text-right">Created</dt>
            <dd class="col-10">
                @Model.CreatedAt.ToString("g")
            </dd>
        </dl>
        @if (Model.Sent)
        {
            <dl class="row">
                <dt class="col-2 text-right">Payment page</dt>
                <dd class="col-10">
                    @{
                        var paymentPageHref = Url.RouteUrl("pay-invoice", new { id = Model.LinkId }, scheme);
                    }
                    <a href="@paymentPageHref">@(paymentPageHref) <i class="fas fa-arrow-right ml-3"></i></a>
                </dd>
            </dl>
        }
    </div>
</div>

@if (Model.Paid)
{
    <div class="card-style">
        <div class="card-header">
            <h3>Payment</h3>
        </div>
        <div class="card-content invoice-details">
            <dl class="row">
                <dt class="col-2 text-right">Amount</dt>
                <dd class="col-10">
                    $@Model.Total
                </dd>
            </dl>
            <dl class="row">
                <dt class="col-2 text-right">Paid on</dt>
                <dd class="col-10">
                    @Model.PaidAt?.ToString("g")
                </dd>
            </dl>
        </div>
    </div>
}

<div>
    <a asp-action="Index"><i class="fas fa-chevron-left mr-3"></i> Back</a>
</div>

<div class="modal fade y-flip-rotate" id="sendInvoiceModal" tabindex="-1" role="dialog" aria-labelledby="editLockedInvoiceModalLabel" aria-hidden="true">
    <div id="sendInvoiceFormResend" class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editLockedInvoiceModalLabel">Send Invoice?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning" role="alert">
                    Warning! You've already sent this invoice!
                </div>
                <p>
                    Send again?
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" id="reSendInvoiceFormSubmit" class="btn btn-primary">Resend Invoice</button>
            </div>
        </div>
    </div>

    <div id="sendInvoiceFormConfirm" class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editLockedInvoiceModalLabel">Send Invoice?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning" role="alert">
                    Warning! You are about to send an invoice!
                </div>
                <p>
                    Sending your invoice will lock it and you will be unable to edit it!
                </p>
                <p>
                    If you decide you later wish to edit this invoice, your customer will be unable to see it until you send it again.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" id="sendInvoiceFormSubmit" class="btn btn-primary">Send Invoice</button>
            </div>
        </div>
    </div>

    <div id="sendInvoiceFormProgress" class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <p>
                    Sending Invoice...
                </p>
            </div>
        </div>
    </div>

    <div id="sendInvoiceFormResult" class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editLockedInvoiceModalLabel">Send Invoice?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning" role="alert">
                    Success
                </div>
                <p>
                    Your invoice has been sent!
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<form method="POST" id="unlockInvoiceForm" asp-action="Unlock" asp-route-id="@Model.Id">
    <div class="modal fade" id="editLockedInvoiceModal" tabindex="-1" role="dialog" aria-labelledby="editLockedInvoiceModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editLockedInvoiceModalLabel">Edit Invoice?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger" role="alert">
                        Warning! You are about to edit an invoice that has already been sent!
                    </div>
                    <p>
                        Continuing will prevent your customer from paying this invoice unil you send it again!
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="unlockInvoiceFormSubmit" class="btn btn-primary">Unlock Invoice</button>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="modal fade" id="getShareLinkModal" tabindex="-1" role="dialog" aria-labelledby="getShareLinkModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="getShareLinkModalLabel">Share Invoice</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Share Link
                <input type="text" id="shareLinkModalInput" class="form-control" readonly />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<form method="POST" id="markPaidForm" asp-action="MarkPaid" asp-route-id="@Model.Id">
    <div class="modal fade" id="markPaidModal" tabindex="-1" role="dialog" aria-labelledby="markPaidModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="markPaidModalLabel">Mark Invoice Paid?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger" role="alert">
                        Warning! You are about to mark this invoice as paid!
                    </div>
                    <p>
                        Continuing will close this invoice and mark it paid. This is irreversible!
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="markPaidFormSubmit" class="btn btn-primary">Mark as paid</button>
                </div>
            </div>
        </div>
    </div>
</form>

<form method="POST" id="deleteDraftForm" asp-action="Delete" asp-route-id="@Model.Id">
    <div class="modal fade" id="deleteDraftModal" tabindex="-1" role="dialog" aria-labelledby="deleteDraftModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteDraftModalLabel">Delete Invoice?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger" role="alert">
                        Warning! You are about to delete this invoice!
                    </div>
                    <p>
                        Continuing will close this invoice and delete. This is irreversible!
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="delteDraftFormSubmit" class="btn btn-primary">Delete</button>
                </div>
            </div>
        </div>
    </div>
</form>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

@section scripts {

    <script>
        var form = $("#__AjaxAntiForgeryForm");
        window.antiForgeryToken = $('input[name="__RequestVerificationToken"]', form).val();
    </script>

    <script type="text/javascript">
        var invoiceSent = @Json.Serialize(Model.Sent);
        var sendUrl = '@Url.Action("Send", "Invoices", new { id = Model.Id })';

        $('#sendInvoiceModal').on('show.bs.modal',
            function () {
                // reset modal state
                $('#sendInvoiceModal .modal-dialog').hide();

                if (invoiceSent) {
                    $('#sendInvoiceFormResend').show();
                } else {
                    $('#sendInvoiceFormConfirm').show();
                }
            });

        $('#sendInvoiceFormSubmit, #reSendInvoiceFormSubmit').click(function () {

            // start transition
            $('#sendInvoiceModal').addClass('flip');

            // show loading modal
            setTimeout(function () {
                $('#sendInvoiceModal .modal-dialog').hide();
                $('#sendInvoiceFormProgress').show();
            }, 500);

            // send email request
            fetch(sendUrl, {
                    credentials: "same-origin",
                    headers: new Headers({
                        "Content-Type": "application/json",
                        "RequestVerificationToken": window.antiForgeryToken
                    }),
                    method: 'POST',
                })
                .then(function (response) {
                    if (response.ok) {
                        invoiceSent = true;
                    }

                    return response.json();
                })
                .then(function() {
                    return new Promise(function(r, x) {
                        setTimeout(function() { r() }, 1000);
                    });
                })
                .then(function() {
                    // reverse transition
                    $('#sendInvoiceModal').removeClass('flip');

                    // show next modal
                    setTimeout(function () {
                        $('#sendInvoiceModal .modal-dialog').hide();
                        $('#sendInvoiceFormResult').show();
                    }, 500);
                });
        });
    </script>
}
