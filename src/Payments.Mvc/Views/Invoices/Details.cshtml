@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Routing
@using Payments.Core.Models.History
@using Payments.Core.Resources
@using Payments.Mvc.Models.CyberSource
@using Payments.Mvc.Identity
@model Invoice
@inject IHttpContextAccessor _httpContextAccessor
@inject ApplicationUserManager _applicationUserManager

@{
    ViewBag.Title = $"Invoice #{Model.GetFormattedId()}";
    Layout = "_Layout";

    var teamSlug = _httpContextAccessor.HttpContext.GetRouteData().Values["team"] as string;
    var scheme = _httpContextAccessor.HttpContext.Request.Scheme;

    var timeline = Model.History.OrderByDescending(h => h.ActionDateTime);

    var successfulPayment = Model.PaymentEvents?.FirstOrDefault(p => p.ProcessorId == Model.PaymentProcessorId);

    var user = await _applicationUserManager.GetUserAsync(User);
    var userPermissions = user.TeamPermissions.Where(p => p.Team.Slug == teamSlug).Select(p => p.Role.Name);

    var anyTaxExempt = Model.Items.Any(i => i.TaxExempt);
}

<div class="card">
    <div class="card-header card-header-yellow d-flex justify-content-between">
        <div class="d-flex align-items-center">
            <h2 class="m0">@ViewBag.Title for @Model.CalculatedTotal.ToString("C")</h2>
            <span class="ml-3 badge @Invoice.StatusCodes.GetBadgeClass(Model.Status)" data-level="@Model.Status">@Model.Status</span>
        </div>

        @if (Model.Status == Invoice.StatusCodes.Draft)
        {
            <button class="btn-plain" data-toggle="modal" data-target="#deleteDraftModal">
                <i class="far fa-trash-alt text-danger"></i>
                Delete draft
            </button>
        }
    </div>
    <div class="card-body card-bot-border">
        @if (Model.Status == Invoice.StatusCodes.Draft || Model.Status == Invoice.StatusCodes.Sent)
        {
            <a asp-controller="Payments" asp-action="Preview" asp-route-id="@Model.Id" class="btn">
                <i class="fas fa-search mr-3"></i>
                Preview
            </a>

            if (!Model.Sent)
            {
                <a href="#" id="sendInvoiceButton" class="btn" data-toggle="modal" data-target="#sendInvoiceModal" data-action="send">
                    <i class="far fa-envelope mr-3"></i>
                    Send
                </a>
            }
            else
            {
                <a href="#" id="sendInvoiceButton" class="btn" data-toggle="modal" data-target="#sendInvoiceModal" data-action="resend">
                    <i class="far fa-envelope mr-3"></i>
                    Resend
                </a>
            }
            
        }

        @if (Model.Status == Invoice.StatusCodes.Sent)
        {
            var modalTarget = userPermissions.Contains(TeamRole.Codes.FinanceOfficer)
                ? "#markPaidModal"
                : "#markPaidNoPermissionModal";

            <button class="btn" data-toggle="modal" data-target="@modalTarget">
                <i class="far fa-check-square"></i>
                Mark as paid
            </button>
        }
    </div>
    <div class="card-body history-timeline">
        @foreach (var action in timeline)
        {
            var actionType = HistoryActionTypes.GetHistoryActionType(action.Type);

            <div class="d-flex w-100 history-item">
                <div class="ml-2 mt-1 mr-4">
                    <i class="history-icon fa-fw @actionType.IconClass"></i>
                </div>
                <div>
                    <span>@action.GetMessage()</span><br />
                    <span class="text-muted">@action.ActionDateTime.ToString("MMM dd, h:mm tt")</span>
                </div>
            </div>
        }
    </div>
</div>

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h2>Summary</h2>

        <div>
            @if (!string.IsNullOrWhiteSpace(Model.LinkId))
            {
                <a asp-controller="Pdf" asp-action="Invoice" asp-route-id="@Model.LinkId" class="btn">
                    <i class="fas fa-download mr-3"></i>
                    Download PDF
                </a>
            }

            @if (Model.Status == Invoice.StatusCodes.Draft || Model.Status == Invoice.StatusCodes.Sent)
            {
                if (!Model.Sent)
                {
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn">
                        <i class="far fa-edit mr-3"></i>
                        Edit
                    </a>
                }
                else
                {
                    <button class="btn" data-toggle="modal" data-target="#editLockedInvoiceModal">
                        <i class="far fa-edit mr-3"></i>
                        Edit
                    </button>
                }
            }
        </div>
    </div>
    <div class="card-body card-bot-border invoice-customer">
        <div class="row mb-0">
            <div class="col-md-6">
                <dl class="row mb-0">
                    <dt class="col-6">@Html.DisplayNameFor(x => x.CustomerName)</dt>
                    <dd class="col-6">
                        @if (!string.IsNullOrWhiteSpace(Model.CustomerName))
                        {
                            <span>@Model.CustomerName</span>
                        }
                        else
                        {
                            <span class="text-muted">None Specified</span>

                        }
                    </dd>

                    <dt class="col-6">@Html.DisplayNameFor(x => x.CustomerEmail)</dt>
                    <dd class="col-6">
                        @if (!string.IsNullOrWhiteSpace(Model.CustomerEmail))
                        {
                            <span>@Model.CustomerEmail</span>
                        }
                        else
                        {
                            <span class="text-muted">None Specified</span>

                        }
                    </dd>

                    <dt class="col-6">@Html.DisplayNameFor(x => x.CustomerAddress)</dt>
                    <dd class="col-6">
                        @if (!string.IsNullOrWhiteSpace(Model.CustomerAddress))
                        {
                            <span>@Model.CustomerAddress</span>
                        }
                        else
                        {
                            <span class="text-muted">None Specified</span>

                        }
                    </dd>
                </dl>
            </div>
            <div class="col-md-6">
                <dl class="row mb-0">
                    <dt class="col-6">Invoice Number</dt>
                    <dd class="col-6">
                        <span>@Model.GetFormattedId()</span>
                    </dd>

                    <dt class="col-6">Due date</dt>
                    <dd class="col-6">
                        @if (Model.DueDate.HasValue)
                        {
                            <span>@Model.DueDate</span>
                        }
                        else
                        {
                            <span class="text-muted">None</span>
                        }
                    </dd>
                </dl>
            </div>
        </div>
        
    </div>
    <div class="card-body invoice-items p-0">
        <table class="invoice-details-table">
            <thead>
                <tr>
                    <th>Description</th>
                    <th>
                        @if (anyTaxExempt)
                        {
                            <text>Tax Exempt</text>
                        }
                    </th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th>Amount</th>
                </tr>
            </thead> 
            <tbody class="invoice-details-table-items">
            @for (var i = 0; i < Model.Items.Count; i++)
            {
                <tr>
                    <td>@Html.DisplayFor(x => x.Items[i].Description)</td>
                    <td>
                        @if (Model.Items[i].TaxExempt)
                        {
                            <i class="far fa-check-square"></i>
                        }
                    </td>
                    <td>@Html.DisplayFor(x => x.Items[i].Quantity)</td>
                    <td>@Html.DisplayFor(x => x.Items[i].Amount)</td>
                    <td>@Html.DisplayFor(x => x.Items[i].Total)</td>
                </tr>
            }
            </tbody>
            <tbody class="invoice-details-table-subtotals">
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Subtotal</td>
                    <td>@Html.DisplayFor(x => x.CalculatedSubtotal)</td>
                </tr>
                @if (Model.CalculatedDiscount > 0 || Model.Coupon != null)
                {

                    // paid invoices don't expire
                    var isExpired = (!Model.Paid && Model.Coupon?.ExpiresAt != null && Model.Coupon.ExpiresAt.Value < DateTime.UtcNow);

                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>
                        @if (Model.Coupon != null)
                        {
                            <span>@Model.Coupon.Name</span>
                            <br />
                            if (Model.Coupon.DiscountAmount.HasValue)
                            {
                                <small>@Model.Coupon.DiscountAmount.Value.ToString("C") off</small>
                            }
                            if (Model.Coupon.DiscountPercent.HasValue)
                            {
                                <small>@Model.Coupon.DiscountPercent.Value.ToString("P") off</small>
                            }
                        }
                        else
                        {
                            <span>Discount</span>
                        }
                    </td>
                    <td>
                        @if (isExpired)
                        {
                            <span>Expired</span>
                        }
                        else
                        {
                            <span>-$@Model.CalculatedDiscount.ToString("F2")</span>
                        }
                    </td>
                </tr>
                }
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Tax (@Html.DisplayFor(x => x.TaxPercent))</td>
                    <td>@Html.DisplayFor(x => x.CalculatedTaxAmount)</td>
                </tr>
                </tbody>
            <tfoot>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Total</td>
                    <td>@Html.DisplayFor(x => x.CalculatedTotal)</td>
                </tr>
            </tfoot>
        </table>
    </div>
    @if (!string.IsNullOrWhiteSpace(Model.Memo))
    {
        <div class="card-body invoice-memo">
            <h2>Memo</h2>
            <div class="form-group">
                @Html.DisplayFor(x => x.Memo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
    }
</div>

@if (Model.Attachments.Any())
{
    <div class="card">
        <div class="card-header">
            <h2>Attachments</h2>
        </div>
        <div class="card-body invoice-attachments">
            @foreach (var a in Model.Attachments)
            {
                var iconClass = a.GetFileIcon();

                <div class="d-flex justify-content-between align-items-center my-3">
                    <div class="col-9 d-flex align-items-center">
                        <i class="fa-2x mr-4 @iconClass"></i>
                        <div class="input-group">
                            <input class="form-control" value="@a.FileName" readonly>
                        </div>
                    </div>

                    <span class="col-2 d-flex justify-content-center">@a.GetSizeText()</span>

                    <div class="col-1 d-flex justify-content-end align-items-center">
                        <a class="btn-plain btn-hover mx-2" target='_blank' asp-controller="Files" asp-action="GetFile" asp-route-id="@a.Id">
                            <i class="fas fa-download"></i>
                        </a>

                        <button class="btn-plain btn-hover text-danger ml-2">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
}

<div class="card">
    <div class="card-header">
        <h2>Details</h2>
    </div>
    <div class="card-body invoice-details">
        <dl class="row">
            <dt class="col-2 text-right">Created</dt>
            <dd class="col-10">
                @Model.CreatedAt.ToString("g")
            </dd>
        </dl>
        @if (Model.Sent)
        {
            <dl class="row">
                <dt class="col-2 text-right">Payment page</dt>
                <dd class="col-10">
                    @{
                        var paymentPageHref = Url.RouteUrl("pay-invoice", new { id = Model.LinkId }, scheme);
                    }
                    <a href="@paymentPageHref">@(paymentPageHref) <i class="fas fa-arrow-right ml-3"></i></a>
                </dd>
            </dl>
        }
    </div>
</div>

@if (Model.Paid)
{
    <div class="card">
        <div class="card-header">
            <h2>Payment</h2>
        </div>
        <div class="card-body card-bot-border invoice-payment-details">
            <dl class="row">
                <dt class="col-3 text-right">Amount</dt>
                <dd class="col-9">
                    @Model.CalculatedTotal.ToString("C")
                </dd>

                <dt class="col-3 text-right">Paid on</dt>
                <dd class="col-9">
                    @Model.PaidAt?.ToString("g")
                </dd>
            </dl>
            @if (successfulPayment != null)
            {
                var cardClass = CyberSourceCardTypes.GetIconClass(successfulPayment.CardType);
                var cardNumber = $"XXXX {successfulPayment.CardNumber?.TakeLast(4)}";

                <dl class="row mt-3">
                    
                    @if (!string.IsNullOrWhiteSpace(successfulPayment.CardNumber))
                    {
                        <dt class="col-3 text-right">Card Details</dt>
                        <dd class="col-9">
                            <span class="text-monospace">@CyberSourceCardTypes.FormatCardNumber(successfulPayment.CardNumber, successfulPayment.CardType)</span>
                            <i class="@cardClass"></i>
                            @if (successfulPayment.CardExpiry.HasValue)
                            {
                                <span class="badge badge-primary">@successfulPayment.CardExpiry.Value.ToString("MM/yyyy")</span>
                            }
                        </dd>
                    }

                    <dt class="col-3 text-right">Billing Name</dt>
                    <dd class="col-9">
                        @successfulPayment.BillingFirstName @successfulPayment.BillingLastName
                    </dd>

                    <dt class="col-3 text-right">@Html.DisplayNameFor(x => x.PaymentEvents[0].BillingEmail)</dt>
                    <dd class="col-9">
                        @successfulPayment.BillingEmail
                    </dd>

                    <dt class="col-3 text-right">@Html.DisplayNameFor(x => x.PaymentEvents[0].BillingPhone)</dt>
                    <dd class="col-9">
                        @successfulPayment.BillingPhone
                    </dd>

                    <dt class="col-3 text-right">@Html.DisplayNameFor(x => x.PaymentEvents[0].BillingStreet1)</dt>
                    <dd class="col-9">
                        @successfulPayment.BillingStreet1
                    </dd>

                    <dt class="col-3 text-right">@Html.DisplayNameFor(x => x.PaymentEvents[0].BillingStreet2)</dt>
                    <dd class="col-9">
                        @successfulPayment.BillingStreet2
                    </dd>

                    <dt class="col-3 text-right">@Html.DisplayNameFor(x => x.PaymentEvents[0].BillingCity)</dt>
                    <dd class="col-9">
                        @successfulPayment.BillingCity
                    </dd>

                    <dt class="col-3 text-right">@Html.DisplayNameFor(x => x.PaymentEvents[0].BillingState)</dt>
                    <dd class="col-9">
                        @successfulPayment.BillingState
                    </dd>

                    <dt class="col-3 text-right">@Html.DisplayNameFor(x => x.PaymentEvents[0].BillingCountry)</dt>
                    <dd class="col-9">
                        @successfulPayment.BillingCountry
                    </dd>

                    <dt class="col-3 text-right">@Html.DisplayNameFor(x => x.PaymentEvents[0].BillingPostalCode)</dt>
                    <dd class="col-9">
                        @successfulPayment.BillingPhone
                    </dd>
                </dl>
            }
        </div>
        @foreach (var payment in Model.PaymentEvents)
        {
        }
        <div>

        </div>
    </div>
}

<div>
    <a asp-action="Index"><i class="fas fa-chevron-left mr-3"></i> Back</a>
</div>

<div class="modal fade" id="sendInvoiceModal" tabindex="-1" role="dialog" aria-labelledby="sendInvoiceModalLabel" aria-hidden="true">
    <form id="sendInvoiceForm">
        <div class="modal-dialog modal-dialog-centered modal-lg send-invoice-modal, " role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="sendInvoiceModalLabel">Send Invoice?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div id="sendInvoiceFormBody" class="modal-body">
                    <div id="sendInvoiceSendWarning" class="modal-body">
                        <div class="alert alert-warning" role="alert">
                            Warning! You are about to send an invoice!
                        </div>
                        <p>
                            Sending your invoice will lock it and you will be unable to edit it!
                        </p>
                        <p>
                            If you decide you later wish to edit this invoice, your customer will be unable to see it until you send it again.
                        </p>
                    </div>

                    <div id="sendInvoiceResendWarning">
                        <div class="alert alert-warning" role="alert">
                            Warning! You've already sent this invoice!
                        </div>
                    </div>
                    
                    <div class="form-group row">
                        <label for="sendEmail" class="col-3 col-form-label text-right">Send to</label>
                        <div class="col-8">
                            <input type="text" class="form-control" name="sendEmail" readOnly value="@Model.CustomerEmail" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="cc" class="col-3 col-form-label text-right">Cc</label>
                        <div class="col-8">
                            <input id="sendInvoiceFormCc" type="text" class="form-control" name="ccEmails" />
                        </div>
                    </div>
                </div>

                <div id="sendInvoicePreview" class="modal-body p-0">
                    <div class="d-flex" style="min-height: 60vh">
                        <iframe name="iframe_preview" src="@Url.Action("Preview", "Payments", new {id = Model.Id})" style="border: 0px none; min-height: 100%; position: relative; width: 100%"></iframe>
                    </div>
                </div>

                <div id="sendInvoiceProgress" class="modal-body">
                    <p>
                        Sending Invoice...
                    </p>
                </div>

                <div id="sendInvoiceComplete" class="modal-body">
                    <div class="alert alert-warning" role="alert">
                        Success
                    </div>
                    <p>
                        Your invoice has been sent!
                    </p>
                </div>

                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn-inverse" data-dismiss="modal">Close</button>
                    <button type="button" id="sendInvoiceFormSubmit" class="btn">Send Invoice</button>
                </div>
            </div>
        </div>
    </form>
</div>

<form method="POST" id="unlockInvoiceForm" asp-action="Unlock" asp-route-id="@Model.Id">
    <div class="modal fade" id="editLockedInvoiceModal" tabindex="-1" role="dialog" aria-labelledby="editLockedInvoiceModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editLockedInvoiceModalLabel">Edit Invoice?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger" role="alert">
                        Warning! You are about to edit an invoice that has already been sent!
                    </div>
                    <p>
                        Continuing will prevent your customer from paying this invoice until you send it again!
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn-inverse" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="unlockInvoiceFormSubmit" class="btn">Unlock Invoice</button>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="modal fade" id="getShareLinkModal" tabindex="-1" role="dialog" aria-labelledby="getShareLinkModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="getShareLinkModalLabel">Share Invoice</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Share Link
                <input type="text" id="shareLinkModalInput" class="form-control" readonly />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-inverse" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<form method="POST" id="markPaidForm" asp-action="MarkPaid" asp-route-id="@Model.Id">
    <div class="modal fade" id="markPaidModal" tabindex="-1" role="dialog" aria-labelledby="markPaidModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="markPaidModalLabel">Mark Invoice Paid?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger" role="alert">
                        Warning! You are about to mark this invoice as paid!
                    </div>
                    <p>
                        Continuing will close this invoice and mark it paid. This is irreversible!
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn-inverse" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="markPaidFormSubmit" class="btn">Mark as paid</button>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="modal fade" id="markPaidNoPermissionModal" tabindex="-1" role="dialog" aria-labelledby="markPaidNoPermissionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="markPaidModalLabel">Mark Invoice Paid?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger" role="alert">
                    You do not have permission to close this invoice. Contact your team's Financial Officer.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-inverse" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<form method="POST" id="deleteDraftForm" asp-action="Delete" asp-route-id="@Model.Id">
    <div class="modal fade" id="deleteDraftModal" tabindex="-1" role="dialog" aria-labelledby="deleteDraftModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteDraftModalLabel">Delete Invoice?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger" role="alert">
                        Warning! You are about to delete this invoice!
                    </div>
                    <p>
                        Continuing will close this invoice and delete. This is irreversible!
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn-inverse" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="deleteDraftFormSubmit" class="btn">Delete</button>
                </div>
            </div>
        </div>
    </div>
</form>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

@section scripts {

    <script asp-add-nonce="true">
        var form = $("#__AjaxAntiForgeryForm");
        window.antiForgeryToken = $('input[name="__RequestVerificationToken"]', form).val();

        var invoiceSent = @Json.Serialize(Model.Sent);
        var sendUrl = '@Url.Action("Send", "Invoices", new { id = Model.Id })';
        var forwardUrl = '@Url.Action("Send", "Invoices", new { id = Model.Id })';

        $sendModal = $('#sendInvoiceModal');
        $sendModal.on('show.bs.modal',
            function (event) {

                // reset modal state
                $sendModal.find('.modal-body').hide();

                // show form and button
                $('#sendInvoiceFormBody').show();
                $('#sendInvoiceFormSubmit').removeClass('disabled');

                // get action
                var button = $(event.relatedTarget);
                var action = button.data('action');

                if (action === 'send') {
                    $('#sendInvoiceSendWarning').show();
                    $('#sendInvoiceResendWarning').hide();

                }
                else {
                    $('#sendInvoiceSendWarning').hide();
                    $('#sendInvoiceResendWarning').show();
                }

                // show preview as well
                $('#sendInvoicePreview').show();
            });

        $('#sendInvoiceFormSubmit').click(function () {

            // show progress modal
            $sendModal.find('.modal-body').hide();
            $('#sendInvoiceProgress').show();

            // disable send button
            $('#sendInvoiceFormSubmit').addClass('disabled');


            // create request
            var body = {
                ccEmails: $('#sendInvoiceFormCc').val(),
            };

            // send email request
            fetch(sendUrl, {
                credentials: "same-origin",
                headers: new Headers({
                    "Content-Type": "application/json",
                    "RequestVerificationToken": window.antiForgeryToken
                }),
                body: JSON.stringify(body),
                method: 'POST',
            })
            .then(function(response) {
                if (response.ok) {
                    invoiceSent = true;
                }

                return response.json();
            })
            .then(function() {
                // sleep for 3s to make it look like we're doing important work
                return new Promise(function(r, x) {
                    setTimeout(function() { r() }, 3000);
                });
            })
            .then(function() {
                // show completed
                $sendModal.find('.modal-body').hide();
                $('#sendInvoiceComplete').show();
            })
            .catch(function(err) {

            });
        });
    </script>
}
