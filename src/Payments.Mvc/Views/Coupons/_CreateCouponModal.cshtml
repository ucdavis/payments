@model Payments.Mvc.Models.CouponViewModels.CreateCouponViewModel

<form method="POST" id="createCouponForm" asp-action="Create" novalidate>
    <div class="modal fade" id="createCouponModal" tabindex="-1" role="dialog" aria-labelledby="createCouponModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createCouponModalLabel">Create Coupon</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Coupon Name</label>
                        <input class="form-control" type="text" asp-for="Name" required />
                        <div class="invalid-feedback">Name is required</div>
                    </div>
                    <div class="form-group">
                        <label>Coupon Code</label>
                        <input class="form-control" type="text" asp-for="Code" required />
                        <div class="invalid-feedback">Code is required</div>
                    </div>
                    <div class="form-group">
                        <label>Discount</label>
                        <div class="row justify-content-between align-items-baseline">
                            <div class="input-group col-5">
                                <div class="input-group-text">
                                    
                                        <i class="fas fa-fw fa-dollar-sign"></i>
                                   
                                </div>
                                <input class="form-control text-right" type="number" step="0.01" placeholder="0.00" asp-for="DiscountAmount" />
                                <div class="invalid-feedback">Just one discount type required</div>
                            </div>
                            <span class=""> - OR - </span>
                            <div class="input-group col-5">
                                <input class="form-control text-right" type="number" step="0.001" placeholder="0.00" asp-for="DiscountPercent" />
                                <div class="input-group-text">
                                    
                                        <i class="fas fa-fw fa-percent"></i>
                                   
                                </div>
                                <div class="invalid-feedback">Discount Percent must be zero or between 0.01 and 99.</div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Optional Expiration Date</label>
                        <input class="form-control date" type="text" placeholder="MM/DD/YYYY" asp-for="ExpiresAt"
                               data-provide="datepicker" data-date-format="mm/dd/yyyy" data-date-start-date="+1d" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn-inverse" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="createCouponFormSubmit" class="btn">Create</button>
                </div>
            </div>
        </div>
    </div>
</form>

<script asp-add-nonce="true">
    function checkDiscountValidity() {
        var $DiscountAmount = $('#DiscountAmount');
        var discountAmount = $DiscountAmount.val();

        var $DiscountPercent = $('#DiscountPercent');
        var discountPercent = $DiscountPercent.val();

        if (discountAmount <= 0 && discountPercent <= 0) {
            $DiscountAmount[0].setCustomValidity('Discount is required');
            $DiscountPercent[0].setCustomValidity('Discount is required');
            return false;
        }
        else if (discountAmount > 0 && discountPercent > 0) {
            $DiscountAmount[0].setCustomValidity('Set only one discount');
            $DiscountPercent[0].setCustomValidity('Set only one discount');
            return false;
        }
        if (discountAmount === 0 && discountPercent < 0.01 || discountPercent > 99.99) {
            $DiscountPercent[0].setCustomValidity('Discount Percent must be zero or between 0.01 and 99.99');
            return false;
        }

        $DiscountAmount[0].setCustomValidity('');
        $DiscountPercent[0].setCustomValidity('');
        return true;
    }

    document.addEventListener("DOMContentLoaded", function () {
        $('#createCouponForm').submit(function (event) {
            try {
                // trigger standard validation
                var isValid = this.checkValidity();
                $(this).addClass('was-validated');

                // check for at least one field on amount/percent
                if (!checkDiscountValidity()) {
                    isValid = false;
                }

                // if true, submit form
                return isValid;
            } catch (err) {
                console.error(err);
                return false;
            }
        });

        $('#DiscountAmount').blur(checkDiscountValidity);
        $('#DiscountPercent').blur(checkDiscountValidity);

        // setup auto code
        var dirtyCode = false;
        $('#Name').keyup(function () {
            if (dirtyCode) {
                return;
            }
            var slug = $(this).val();
            slug = slug.replace(/[\W_]/g, '-');
            slug = slug.replace(/--*/g, '-');
            slug = slug.trim('-');
            slug = slug.toUpperCase();

            $('#Code').val(slug);
        });

        $('#Code').change(function () {
            dirtyCode = true;
        });
    });
</script>
